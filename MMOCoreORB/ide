#! /bin/bash
#
# ide - IDE packages for swgemu development environment
#
# Author: Scurby <scurby@swgemu.com>
#
# Created: Oct 9 2016
# TODO quiet the apt commands

logger -t options "** OPTIONS **"

##############################################################################
# Common functions and setup
##############################################################################
yorn() {
  echo -n -e "$@ Y\b"
  read yorn
  case $yorn in
    [Nn]* ) return 1;;
  esac
  return 0
}

logstep() {
  let "step=$step + 1"
  echo ${tc_smso}$(head -c $(tput cols) < /dev/zero | tr '\0' '*')${tc_rmso}
  echo "${tc_smso}**${tc_rmso} STEP $step >> $*"
  logger -t options "STEP $step >> $*"
}

step=0
tc_smso=$(tput smso)
tc_rmso=$(tput rmso)


################
# QTCreator
################
logstep "QT Creator"
if [ -f /usr/bin/qtcreator ]; then
  echo "Looks like QTCreator is already installed"
  else
    if yorn "Would you like to install QTCreator ?"; then
	  sudo apt-get install qtcreator | tee -a ~/Documents/pkglog.txt
    fi
fi
################
# Atom
################
if [ -d ~/.atom ]; then
  echo "Looks like Atom is already installed"
else
  if yorn "Would you like to install Atom ?"; then
	  sudo apt-get -y install gvfs-bin | tee -a ~/Documents/pkglog.txt
	  cd setup
	  wget -O atom-amd64.deb https://atom.io/download/deb
	  sudo dpkg -i atom-amd64.deb | tee -a ~/Documents/pkglog.txt
  fi
fi

#################
# Eclipse install
#################
logstep "Setup Eclipse"

dir=~/setup/
eclipse_base=~/setup/eclipse-cpp-mars-2-linux-gtk-x86_64.tar.gz

if yorn "Would you like to install Eclipse??"; then
  if [ ! -f $eclipse_base ]; then
    cd $dir
    wget http://mirrors.xmission.com/eclipse/technology/epp/downloads/release/mars/2/eclipse-cpp-mars-2-linux-gtk-x86_64.tar.gz
  fi

  if [ -d ~/eclipse ]; then
    echo "Looks like eclipse is already installed"
  else
    echo "Restoring basic eclipse install from $eclipse_base"
    cd ~
    ~/DevEnv/bin/bar $eclipse_base | tar xfz -
    echo "Import eclipse project settings (might take a few minutes)"
    for i in Core3/MMOCoreORB PublicEngine/MMOEngine Tools/* # Tools/WorldSpawnerTool Tools/AIEditor
    do
      if [ -f ~/workspace/$i/.project ]; then
        echo "Importing $i"
        ~/eclipse/eclipse \
        -nosplash \
        -data ~/workspace \
        -application org.eclipse.cdt.managedbuilder.core.headlessbuild \
        -import ~/workspace/$i
      else
        echo "Missing project file for $i?"
      fi
    done

    for dir in ~/workspace/.metadata/.plugins/org.eclipse.core.resources/.projects/*
    do
      echo "Setup Egit properties for "$(basename $dir)
      cd $dir
      tar xzf ~/setup/Egit-properties.tar.gz
    done
    echo "Eclipse setup and import complete"
    echo "Add additional packages in Eclipse as desired. (LUA Development Tools is recommended. )"
  fi
fi

######################
# wxLua wxWidgets
######################
# cd Downloads
# TODO test on fresh
# echo TODO run 'reqd' before this. gcc needed.
if yorn "Would you like to install wxLua ?"; then
# wget https://raw.githubusercontent.com/pkulchenko/ZeroBraneStudio/master/build/build-linux.sh
  # sudo apt-get install cmake
  # sudo apt-get install libwxgtk3.0-dev  | tee -a ~/Documents/lualog.txt
  # sudo apt-get install libgtk-3-dev | tee -a ~/Documents/lualog.txt
  # sudo apt-get install gtk+-2.0 | tee -a ~/Documents/lualog.txt
  sudo ~/DevEnv/bin/wxDeb | tee -a ~/Documents/lualog.txt
  sudo ~/DevEnv/bin/wxLuainstall 5.3 | tee -a ~/Documents/lualog.txt
  sudo ~/DevEnv/bin/wxLuainstall jit | tee -a ~/Documents/lualog.txt
  sudo ~/DevEnv/bin/wxLuainstall wxwidgets | tee -a ~/Documents/lualog.txt
  sudo ~/DevEnv/bin/wxLuainstall lua | tee -a ~/Documents/lualog.txt
  sudo ~/DevEnv/bin/wxLuainstall wxlua | tee -a ~/Documents/lualog.txt
fi

######################
# Remove un-needed files
######################
	# TODO remove tarballs
logstep "Finalizing install"
#  sudo apt-get -y update | tee -a ~/Documents/pkglog.txt
  echo
  echo "Thanks for the fish...  "
  echo

exit 0
