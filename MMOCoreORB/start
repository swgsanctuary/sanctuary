#!/bin/bash
#
# start - Run core3 engine, build as needed, restore test "freeze" if needed etc.
#
# Author: Lord Kator <lordkator@swgemu.com>
#
# Created: Sun Apr 21 14:25:10 UTC 2013
#
if [ ! -d ~/workspace/MMOCoreORB/bin ]; then
  echo "** No bin dir? Did you run: 'start' yet?"
  echo "**ABORT**"
  exit 2
fi

BUILDARG=$1

# Did we just launch ourselves?
# if [ -n "$RUNDEV_AUTO" ]; then
#   BUILDARG='-'
# else
#   # If we have local X11 and $2=eclipse we try and launch a terminal
#   if xset q > /dev/null 2>&1 && [ "X$DISPLAY" = "X:0.0" -a "X$2" = "Xeclipse" ]; then
#     export RUNDEV_AUTO='Y'
#     nohup gnome-terminal --title 'run_dev' -e $0 > ~/tmp/rundev.out 2>&1 &
#     exit
#   fi
# fi

if SERVER_PID=$(pgrep core3); then
  echo "** Server appears to be running as pid $SERVER_PID **"
  echo ""
  echo " Server shutdown = shutdown "
  echo -e "** Want me to try: screen -x -r to join the console? Y\b\c"
  read yorn
  case $yorn in
    [nn]* )  exit 0;;
  esac
  screen -x -r
  exit 0
fi

cd ~/workspace/MMOCoreORB/bin

# Roll over old screen logs and Save last screen log
if [ -f 'screenlog.0' ]; then
  echo "** Roll previous console logs"
  for i in 5 4 3 2 1
  do
    let "j=$i-1"
    mv ~/run/o_screenlog-$j.gz ~/run/o_screenlog-$i.gz 2> /dev/null
  done

  mv screenlog.0 ~/run/o_screenlog-0 2> /dev/null
  gzip -f ~/run/o_screenlog-0 &
fi

export ERRFILE="/tmp/run_dev$$"

# Run all as sub-process and save to screenlog.0 to later if we need it
(
  echo "$0 $(date)"
  # Should we build?
  if [ "X$BUILDARG" != "X-" ]; then
    if ~/DevEnv/bin/build $BUILDARG; then
      :
    else
      echo "BUILD FAILED" > $ERRFILE
      exit 1
    fi
  fi

  if [ ! -x core3 ]; then
    echo "NO core3 bindary found, did you build the server yet?" > $ERRFILE
    exit 1
  fi

  # Do we have a frozen object database?
  if [ -f ~/run/backup.tar.gz ]; then
    echo "** Restore object database from ~/run/backup.tar.gz"
    rm -fr databases
    tar xvf ~/run/backup.tar.gz
  fi
  # Do we have a frozen mysql db?
  if [ -f ~/run/mysqldump.sql.gz ]; then
    echo "** Restore mysql database from ~/run/mysqldump.sql.gz"
    zcat ~/run/mysqldump.sql.gz | mysql swgemu
  fi

  # Do we have a pre-made config file?
  # TODO test
  if [ -f ~/run/conf/config.lua ]; then
      echo "** Using ~/run/conf/config.lua"
      cp -v ~/run/conf/config.lua conf/
  fi

  trepath=$(echo ' print(TrePath)' | lua -l conf/config)

  if [ ! -f "${trepath}/patch_sku1_14_00.tre" ]; then
    echo "ERROR: Before running the server you must copy all the *.tre files from your game disk to: $trepath" > $ERRFILE
    exit 1
  fi

  # default to hostname as the galaxy name
  name=$(hostname -s)

  # Setup ports based on PingPort in config
  ports=$(echo 'print(string.format("pingport=%d, port=%d\n", PingPort, PingPort+1))' | lua -l 'conf/config' -)

  mysql -p123456 swgemu -v -e "update galaxy set name = '$name', $ports;"
  ~/DevEnv/bin/updateip
  echo "$0 STARTING SERVER UNDER GDB"
) 2>&1 | tee screenlog.0

# Did subprocess have an error?
if [ -f $ERRFILE ]; then
  # show error and exit
  cat $ERRFILE
  echo "**ABORT**"
  rm -f $ERRFILE
  if [ -n "$RUNDEV_AUTO" ]; then
    read -p "Press <ENTER> to exit: "
  fi
  exit 1
fi

# Everthing looks good, run under gdb on a screen
exec screen -L gdb -x ~/run/run_gdb ./core3
